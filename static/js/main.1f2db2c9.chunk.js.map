{"version":3,"sources":["components/TopBar.js","api/questions.js","api/index.js","page/Question.js","utils.js","page/ListQuestions.js","page/Answer.js","App.js","index.js"],"names":["TopBar","history","useHistory","redirect","e","preventDefault","push","target","getAttribute","Navbar","bg","variant","expand","Brand","Toggle","Collapse","id","Nav","className","Link","href","onClick","questions","addQuestion","body","fetch","host","method","headers","JSON","stringify","then","checkStatus","res","json","getAll","getOne","answer","process","REACT_APP_HOST_API","ok","text","msg","Error","api","Question","useState","author","setAuthor","type","setType","question","setQuestion","useMutation","onSuccess","data","mutate","Container","Form","Group","Label","Control","value","onChange","as","isInvalid","rows","Button","undefined","disabled","style","marginTop","dateToString","d","date","Date","zero","getDate","getMonth","getFullYear","int","ListQuestions","useQuery","isLoading","console","log","Spinner","animation","map","q","Card","Body","createdAt","Answer","useParams","setAnswer","addAnswer","App","path","exact","to","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.1f2db2c9.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nimport { useHistory } from \"react-router\";\n\nexport default function TopBar() {\n  const history = useHistory();\n\n  function redirect(e) {\n    e.preventDefault();\n    history.push(e.target.getAttribute(\"href\"));\n  }\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand>DemandeMoi</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"topbar-nav\" />\n      <Navbar.Collapse id=\"topbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/\" onClick={redirect}>\n            Voir les questions\n          </Nav.Link>\n          <Nav.Link href=\"/ask\" onClick={redirect}>\n            Poser une question\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","import { host, checkStatus } from \".\";\n\nconst questions = {\n  addQuestion: (body) => {\n    return fetch(`${host}/questions`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(checkStatus)\n      .then((res) => res.json());\n  },\n  getAll: () => {\n    return fetch(`${host}/questions`, {\n      method: \"GET\"\n    })\n      .then(checkStatus)\n      .then((res) => res.json());\n  },\n  getOne: (id) => {\n    return fetch(`${host}/questions/${id}`, {\n      method: \"GET\"\n    })\n      .then(checkStatus)\n      .then((res) => res.json());\n  },\n  answer: ({ id, body }) => {\n    return fetch(`${host}/questions/${id}/answer`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(checkStatus)\n      .then((res) => res.json());\n  }\n};\n\nexport default questions;\n","import questions from \"./questions\";\n\nexport const host = process.env.REACT_APP_HOST_API || \"http://localhost:3630\";\n\nexport const checkStatus = (res) => {\n  if (res.ok) {\n    return res;\n  } else {\n    return res.text().then((msg) => {\n      throw new Error(msg);\n    });\n  }\n};\n\nconst api = {\n  questions\n};\n\nexport default api;\n","import { useState } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { useMutation } from \"react-query\";\nimport { useHistory } from \"react-router\";\nimport api from \"../api\";\n\nexport default function Question() {\n  const history = useHistory();\n\n  const [author, setAuthor] = useState(\"\");\n  const [type, setType] = useState(\"question\");\n  const [question, setQuestion] = useState(\"\");\n\n  const { mutate: addQuestion } = useMutation(api.questions.addQuestion, {\n    onSuccess: (data) => {\n      history.push(\"/\");\n    }\n  });\n\n  function handleAdd() {\n    if (!!question) {\n      addQuestion({\n        author: !!author ? author : undefined,\n        type,\n        question\n      });\n    }\n  }\n\n  return (\n    <Container>\n      <h1>Poser une question</h1>\n\n      <Form.Group>\n        <Form.Label>Votre nom</Form.Label>\n        <Form.Control\n          value={author}\n          onChange={(e) => setAuthor(e.target.value)}\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label>Type</Form.Label>\n        <Form.Control\n          as=\"select\"\n          value={type}\n          onChange={(e) => setType(e.target.value)}\n        >\n          <option value=\"question\">Question</option>\n          <option value=\"action\">Action</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label>Question/Action</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          value={question}\n          onChange={(e) => setQuestion(e.target.value)}\n          isInvalid={question === \"\"}\n          rows={5}\n        />\n      </Form.Group>\n\n      <Button\n        onClick={handleAdd}\n        disabled={!question}\n        style={{ marginTop: \"10px\" }}\n      >\n        Ajouter\n      </Button>\n    </Container>\n  );\n}\n","export function dateToString(d) {\n  if (d === \"\") return \"\";\n\n  let date;\n\n  if (d instanceof Date) {\n    date = d;\n  } else {\n    date = new Date(d);\n  }\n\n  return `${zero(date.getDate())}/${zero(\n    date.getMonth() + 1\n  )}/${date.getFullYear()}`;\n}\n\nfunction zero(int) {\n  return int < 10 ? \"0\" + int : \"\" + int;\n}\n","import Container from \"react-bootstrap/Container\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { useQuery } from \"react-query\";\nimport api from \"../api\";\nimport { dateToString } from \"../utils\";\nimport { useHistory } from \"react-router\";\n\nexport default function ListQuestions() {\n  const history = useHistory();\n\n  const { data: questions, isLoading } = useQuery(\n    \"questions\",\n    api.questions.getAll\n  );\n\n  console.log(questions);\n\n  return (\n    <Container>\n      <h1>Toutes les questions</h1>\n      {isLoading ? (\n        <Spinner animation=\"border\" />\n      ) : (\n        questions.map((q) => (\n          <Card key={q.id}>\n            <Card.Body>\n              <p>{q.question}</p>\n              <p>\n                Posée par {q.author !== null ? q.author : \"Anonyme\"} le{\" \"}\n                {dateToString(q.createdAt)}\n              </p>\n              {q.Answer === null ? (\n                <Button onClick={() => history.push(\"/answer/\" + q.id)}>\n                  Répondre\n                </Button>\n              ) : (\n                <>\n                  <p>Réponse:</p>\n                  <p>{q.Answer.answer}</p>\n                  <p>Répondu le: {dateToString(q.Answer.createdAt)}</p>\n                </>\n              )}\n            </Card.Body>\n          </Card>\n        ))\n      )}\n    </Container>\n  );\n}\n","import { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { useMutation, useQuery } from \"react-query\";\n\nimport { useHistory, useParams } from \"react-router\";\nimport api from \"../api\";\nimport { dateToString } from \"../utils\";\n\nexport default function Answer() {\n  const { id } = useParams();\n  const history = useHistory();\n\n  const [answer, setAnswer] = useState(\"\");\n\n  const { data: question, isLoading } = useQuery([\"questions\", id], () =>\n    api.questions.getOne(id)\n  );\n  const { mutate: addAnswer } = useMutation(api.questions.answer, {\n    onSuccess: (data) => {\n      history.push(\"/\");\n    }\n  });\n\n  function handleAnswer() {\n    if (!!answer) {\n      addAnswer({ id: id, body: { answer } });\n    }\n  }\n\n  return (\n    <Container>\n      {isLoading ? (\n        <Spinner animation=\"border\" />\n      ) : (\n        <>\n          <p>{question.question}</p>\n          <p>\n            Posée par {question.author !== null ? question.author : \"Anonyme\"}{\" \"}\n            le {dateToString(question.createdAt)}\n          </p>\n\n          {question.Answer === null ? (\n            <>\n              <Form.Group>\n                <Form.Label>Réponse</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  value={answer}\n                  onChange={(e) => setAnswer(e.target.value)}\n                  isInvalid={answer === \"\"}\n                  rows={5}\n                />\n              </Form.Group>\n\n              <Button\n                onClick={handleAnswer}\n                disabled={!answer}\n                style={{ marginTop: \"10px\" }}\n              >\n                Répondre\n              </Button>\n            </>\n          ) : (\n            <>\n              <p>Réponse:</p>\n              <p>{question.Answer.answer}</p>\n              <p>Répondu le: {dateToString(question.Answer.createdAt)}</p>\n            </>\n          )}\n        </>\n      )}\n    </Container>\n  );\n}\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\n// Components\nimport TopBar from \"./components/TopBar\";\n\n// Page\nimport Question from \"./page/Question\";\nimport ListQuestions from \"./page/ListQuestions\";\nimport Answer from \"./page/Answer\";\n\nfunction App() {\n  return (\n    <Router>\n      <TopBar />\n\n      <Switch>\n        <Route path=\"/answer/:id\">\n          <Answer />\n        </Route>\n\n        <Route path=\"/ask\">\n          <Question />\n        </Route>\n\n        <Route exact path=\"/\">\n          <ListQuestions />\n        </Route>\n\n        <Redirect to=\"/\" />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\n// Create a client\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n"],"sourceRoot":""}