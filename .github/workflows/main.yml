# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Check Lint & Pretty

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  back:
    defaults:
      run:
        working-directory: ./back

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup NodeJS
      uses: actions/setup-node@v2
      with:
        node-version: 14
    - run: npm install --only=dev
    - run: npm run lint
    - run: npm run check-pretty
  
  front:
    defaults:
      run:
        working-directory: ./front

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup NodeJS
      uses: actions/setup-node@v2
      with:
        node-version: 14
    - run: npm install --only=dev
    - run: npm run check-pretty
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: name/app
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}